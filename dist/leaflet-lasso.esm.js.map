{"version":3,"file":"leaflet-lasso.esm.js","sources":["../src/lasso-polygon.ts","../src/calc.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/lasso-handler.ts","../src/lasso-control.ts","../src/index.ts"],"sourcesContent":["import * as L from 'leaflet';\r\nimport * as GeoJSON from 'geojson';\r\n\r\nexport class LassoPolygon extends L.Layer {\r\n    readonly polyline: L.Polyline;\r\n    readonly polygon: L.Polygon;\r\n\r\n    constructor(latlngs: L.LatLngExpression[], options?: L.PolylineOptions) {\r\n        super();\r\n\r\n        this.polyline = L.polyline(latlngs, options);\r\n        this.polygon = L.polygon(latlngs, { ...options, weight: 0 });\r\n    }\r\n\r\n    onAdd(map: L.Map): this {\r\n        this.polyline.addTo(map);\r\n        this.polygon.addTo(map);\r\n\r\n        return this;\r\n    }\r\n\r\n    onRemove(): this {\r\n        this.polyline.remove();\r\n        this.polygon.remove();\r\n\r\n        return this;\r\n    }\r\n\r\n    addLatLng(latlng: L.LatLngExpression): this {\r\n        this.polyline.addLatLng(latlng);\r\n        this.polygon.addLatLng(latlng);\r\n\r\n        return this;\r\n    }\r\n\r\n    getLatLngs(): L.LatLng[] {\r\n        return this.polygon.getLatLngs()[0] as L.LatLng[];\r\n    }\r\n\r\n    toGeoJSON(): GeoJSON.Feature<GeoJSON.Polygon> {\r\n        return this.polygon.toGeoJSON() as GeoJSON.Feature<GeoJSON.Polygon>;\r\n    }\r\n}","import * as L from 'leaflet';\r\nimport * as GeoJSON from 'geojson';\r\nimport { calculateBounds, toCircle, contains, intersects } from '@terraformer/spatial';\r\n\r\nfunction geoJSONGeometryToBounds(geometry: GeoJSON.GeometryObject) {\r\n    const bounds = calculateBounds(geometry);\r\n    const leafletBounds = L.latLngBounds([bounds[1], bounds[0]], [bounds[3], bounds[2]]);\r\n    return leafletBounds;\r\n}\r\n\r\nfunction getCircleMarkerRadius(circleMarker: L.CircleMarker, crs: L.CRS, zoom: number) {\r\n    const latLng = circleMarker.getLatLng();\r\n    const point = crs.latLngToPoint(latLng, zoom);\r\n    const delta = circleMarker.getRadius() / Math.SQRT2;\r\n    const topLeftPoint = L.point([point.x - delta, point.y - delta]);\r\n    const topLeftLatLng = crs.pointToLatLng(topLeftPoint, zoom);\r\n    const radius = crs.distance(latLng, topLeftLatLng);\r\n    return radius;\r\n}\r\n\r\nfunction circleToGeoJSONGeometry(latLng: L.LatLng, radius: number) {\r\n    return toCircle(L.GeoJSON.latLngToCoords(latLng), radius).geometry;\r\n}\r\n\r\nfunction layerToGeoJSONGeometry(layer: L.Layer, options: { zoom?: number, crs?: L.CRS } = {}) {\r\n    if (layer instanceof L.Circle) {\r\n        const latLng = layer.getLatLng();\r\n        const radius = layer.getRadius();\r\n        return circleToGeoJSONGeometry(latLng, radius);\r\n    } else if (layer instanceof L.CircleMarker) {\r\n        if (options.zoom != undefined && options.crs != undefined) {\r\n            const latLng = layer.getLatLng();\r\n            const radius = getCircleMarkerRadius(layer, options.crs, options.zoom);\r\n            return circleToGeoJSONGeometry(latLng, radius);\r\n        } else {\r\n            console.warn(\"Zoom and CRS is required for calculating CircleMarker polygon, falling back to center point only\");\r\n            return layer.toGeoJSON().geometry;\r\n        }\r\n    } else if (layer instanceof L.Marker || layer instanceof L.Polyline) {\r\n        return layer.toGeoJSON().geometry;\r\n    }\r\n}\r\n\r\nfunction polygonContains(polygon: GeoJSON.Polygon, layerGeometry: GeoJSON.GeometryObject) {\r\n    return contains(polygon, layerGeometry);\r\n}\r\n\r\nfunction polygonIntersects(polygon: GeoJSON.Polygon, layerGeometry: GeoJSON.GeometryObject) {\r\n    if (layerGeometry.type === \"Point\") {\r\n        return contains(polygon, layerGeometry);\r\n    }\r\n\r\n    // try contains first (fast), then intersects (slower)\r\n    return contains(polygon, layerGeometry) || intersects(polygon, layerGeometry);\r\n}\r\n\r\nexport function getLayersInPolygon(polygon: L.Polygon, layers: L.Layer[], options: { zoom?: number, crs?: L.CRS, intersect?: boolean } = {}) {\r\n    const polygonGeometry = polygon.toGeoJSON().geometry as GeoJSON.Polygon;\r\n    const polygonBounds = polygon.getBounds();\r\n\r\n    const selectedLayers = layers.filter(layer => {\r\n        // check bounds first (fast)\r\n        let layerGeometry;\r\n        let layerBounds;\r\n        if (layer instanceof L.Polyline) {\r\n            layerBounds = layer.getBounds();\r\n        } else {\r\n            layerGeometry = layerToGeoJSONGeometry(layer, options);\r\n            layerBounds = geoJSONGeometryToBounds(layerGeometry);\r\n        }\r\n\r\n        if (!polygonBounds.intersects(layerBounds)) {\r\n            return false;\r\n        }\r\n\r\n        // check full geometry (slower)\r\n        if (!layerGeometry) {\r\n            layerGeometry = layerToGeoJSONGeometry(layer, options);\r\n        }\r\n\r\n        return options.intersect ?\r\n            polygonIntersects(polygonGeometry, layerGeometry) :\r\n            polygonContains(polygonGeometry, layerGeometry);\r\n    });\r\n    \r\n    return selectedLayers;\r\n}","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as L from 'leaflet';\r\nimport { LassoPolygon } from './lasso-polygon';\r\nimport { getLayersInPolygon } from './calc';\r\nimport './lasso-handler.css';\r\n\r\nexport interface LassoHandlerOptions {\r\n    polygon?: L.PolylineOptions,\r\n    intersect?: boolean;\r\n}\r\n\r\ninterface LassoHandlerFinishedEventData {\r\n    latLngs: L.LatLng[];\r\n    layers: L.Layer[];\r\n}\r\n\r\nexport type LassoHandlerFinishedEvent = L.LeafletEvent & LassoHandlerFinishedEventData;\r\n\r\nexport const ENABLED_EVENT = 'lasso.enabled';\r\nexport const DISABLED_EVENT = 'lasso.disabled';\r\nexport const FINISHED_EVENT = 'lasso.finished';\r\n\r\nexport const ACTIVE_CLASS = 'leaflet-lasso-active';\r\n\r\nexport class LassoHandler extends L.Handler {\r\n    options: LassoHandlerOptions = {\r\n        polygon: {\r\n            color: '#00C3FF',\r\n            weight: 2,\r\n        },\r\n        intersect: false,\r\n    };\r\n\r\n    private map: L.Map;\r\n\r\n    private polygon?: LassoPolygon;\r\n\r\n    private onDocumentMouseMoveBound = this.onDocumentMouseMove.bind(this);\r\n    private onDocumentMouseUpBound = this.onDocumentMouseUp.bind(this);\r\n    private onDocumentTouchStartBound = this.onDocumentTouchStart.bind(this);\r\n    private onDocumentTouchMoveBound = this.onDocumentTouchMove.bind(this);\r\n    private onDocumentTouchEndBound = this.onDocumentTouchEnd.bind(this);\r\n\r\n    constructor(map: L.Map, options: LassoHandlerOptions = {}) {\r\n        super(map);\r\n        \r\n        this.map = map;\r\n        L.Util.setOptions(this, options);\r\n    }\r\n\r\n    setOptions(options: LassoHandlerOptions) {\r\n        this.options = { ...this.options, ...options };\r\n    }\r\n\r\n    toggle() {\r\n        if (this.enabled()) {\r\n            this.disable();\r\n        } else {\r\n            this.enable();\r\n        }\r\n    }\r\n    \r\n    addHooks() {\r\n        this.map.getPane('mapPane');\r\n        this.map.on('mousedown', this.onMapMouseDown, this);\r\n        document.addEventListener('touchstart', this.onDocumentTouchStartBound);\r\n\r\n        const mapContainer = this.map.getContainer();\r\n        mapContainer.classList.add(ACTIVE_CLASS);\r\n\r\n        this.map.dragging.disable();\r\n        this.map.fire(ENABLED_EVENT);\r\n    }\r\n\r\n    removeHooks() {\r\n        if (this.polygon) {\r\n            this.map.removeLayer(this.polygon);\r\n            this.polygon = undefined;\r\n        }\r\n\r\n        this.map.off('mousedown', this.onMapMouseDown, this);\r\n        document.removeEventListener('mousemove', this.onDocumentMouseMoveBound);\r\n        document.removeEventListener('mouseup', this.onDocumentMouseUpBound);\r\n        document.removeEventListener('touchstart', this.onDocumentTouchStartBound);\r\n        document.removeEventListener('touchmove', this.onDocumentTouchMoveBound);\r\n        document.removeEventListener('touchend', this.onDocumentTouchEndBound);\r\n\r\n        this.map.getContainer().classList.remove(ACTIVE_CLASS);\r\n        document.body.classList.remove(ACTIVE_CLASS);\r\n\r\n        this.map.dragging.enable();\r\n        this.map.fire(DISABLED_EVENT);\r\n    }\r\n\r\n    private onMapMouseDown(event: L.LeafletEvent) {\r\n        const event2 = event as L.LeafletMouseEvent;\r\n\r\n        // ignore leaflet simulated event\r\n        if (event2.originalEvent.buttons === 0) {\r\n            return;\r\n        }\r\n\r\n        // activate lasso only for left mouse button click\r\n        if (event2.originalEvent.buttons !== 1) {\r\n            this.disable();\r\n            return;\r\n        }\r\n\r\n        // skip clicks on controls\r\n        if ((event2.originalEvent.target as HTMLElement).closest('.leaflet-control-container')) {\r\n            return;\r\n        }\r\n\r\n        this.polygon = new LassoPolygon([event2.latlng], this.options.polygon).addTo(this.map);\r\n\r\n        document.body.classList.add(ACTIVE_CLASS);\r\n\r\n        document.addEventListener('mousemove', this.onDocumentMouseMoveBound);\r\n        document.addEventListener('mouseup', this.onDocumentMouseUpBound);\r\n    }\r\n\r\n    private onDocumentMouseMove(event: Event) {\r\n        if (!this.polygon) {\r\n            return;\r\n        }\r\n\r\n        const event2 = event as MouseEvent;\r\n\r\n        // ignore leaflet simulated event\r\n        if (event2.buttons === 0) {\r\n            return;\r\n        }\r\n\r\n        // keep lasso active only if left mouse button is hold\r\n        if (event2.buttons !== 1) {\r\n            console.warn('mouseup event was missed');\r\n            this.finish();\r\n            return;\r\n        }\r\n\r\n        this.polygon.addLatLng(this.map.mouseEventToLatLng(event2));\r\n    }\r\n\r\n    private onDocumentMouseUp() {\r\n        this.finish();\r\n    }\r\n\r\n    private onDocumentTouchStart(event: TouchEvent) {\r\n        if (event.touches.length !== 1) {\r\n            this.disable();\r\n            return;\r\n        }\r\n        event.target?.dispatchEvent(this.convertTouchEventToMouseEvent(event, 'mousedown'));\r\n\r\n        document.addEventListener('touchmove', this.onDocumentTouchMoveBound);\r\n        document.addEventListener('touchend', this.onDocumentTouchEndBound);\r\n    }\r\n\r\n    private onDocumentTouchMove(event: TouchEvent) {\r\n        if (event.touches.length !== 1) {\r\n            this.finish();\r\n            return;\r\n        }\r\n        event.target?.dispatchEvent(this.convertTouchEventToMouseEvent(event, 'mousemove'));\r\n    }\r\n\r\n    private onDocumentTouchEnd() {\r\n        this.finish();\r\n    }\r\n    \r\n    private convertTouchEventToMouseEvent(event: TouchEvent, mouseEventType: string): MouseEvent {\r\n        const touches = event.changedTouches;\r\n        const touch = touches[0];\r\n        const mouseEvent = new MouseEvent(\r\n            mouseEventType,\r\n            {\r\n                bubbles: true,\r\n                cancelable: true,\r\n                view: window,\r\n                detail: 1,\r\n                screenX: touch.screenX,\r\n                screenY: touch.screenY,\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY,\r\n                ctrlKey: false,\r\n                altKey: false, \r\n                shiftKey: false,\r\n                metaKey: false,\r\n                button: 0,\r\n                relatedTarget: null,\r\n                buttons: 1,\r\n            }\r\n        );\r\n        return mouseEvent;\r\n    }\r\n\r\n    private finish() {\r\n        if (!this.polygon) {\r\n            return;\r\n        }\r\n\r\n        const layers: L.Layer[] = [];\r\n        this.map.eachLayer(layer => {\r\n            if (layer === this.polygon || layer === this.polygon!.polyline || layer === this.polygon!.polygon) {\r\n                return;\r\n            }\r\n\r\n            if (layer instanceof L.Marker || layer instanceof L.Path) {\r\n                layers.push(layer);\r\n            } else if (L.MarkerCluster && layer instanceof L.MarkerCluster) {\r\n                layers.push(...layer.getAllChildMarkers());\r\n            }\r\n        });\r\n\r\n        const selectedFeatures = getLayersInPolygon(this.polygon.polygon, layers, {\r\n            zoom: this.map.getZoom(),\r\n            crs: this.map.options.crs,\r\n            intersect: this.options.intersect,\r\n        });\r\n\r\n        this.map.fire(FINISHED_EVENT, {\r\n            latLngs: this.polygon.getLatLngs(),\r\n            layers: selectedFeatures,\r\n        } as LassoHandlerFinishedEventData);\r\n\r\n        this.disable();\r\n    }\r\n}\r\n","import * as L from 'leaflet';\r\nimport { LassoHandler, LassoHandlerOptions } from './lasso-handler';\r\nimport './lasso-control.css';\r\n\r\nexport type LassoControlOptions = LassoHandlerOptions & L.ControlOptions;\r\n\r\nexport class LassoControl extends L.Control {\r\n    options: LassoControlOptions = {\r\n        position: 'topright',\r\n    };\r\n\r\n    private lasso?: LassoHandler;\r\n\r\n    constructor(options: LassoControlOptions = {}) {\r\n        super();\r\n\r\n        L.Util.setOptions(this, options);\r\n    }\r\n\r\n    setOptions(options: LassoControlOptions) {\r\n        this.options = { ...this.options, ...options };\r\n        \r\n        if (this.lasso) {\r\n            this.lasso.setOptions(this.options);\r\n        }\r\n    }\r\n\r\n    onAdd(map: L.Map) {\r\n        this.lasso = new LassoHandler(map, this.options);\r\n\r\n        const container = L.DomUtil.create('div', 'leaflet-bar leaflet-control') as HTMLDivElement;\r\n        const button = L.DomUtil.create('a', 'leaflet-control-lasso', container) as HTMLAnchorElement;\r\n        button.href = '#';\r\n        button.title = 'Toggle Lasso';\r\n        button.setAttribute('role', 'button');\r\n        button.setAttribute('aria-label', button.title);\r\n\r\n        L.DomEvent.addListener(button, 'click', this.toggle, this);\r\n        L.DomEvent.disableClickPropagation(button);\r\n\r\n        return container;\r\n    }\r\n\r\n    enabled() {\r\n        if (!this.lasso) {\r\n            return false;\r\n        }\r\n        return this.lasso.enabled();\r\n    }\r\n\r\n    enable() {\r\n        if (!this.lasso) {\r\n            return;\r\n        }\r\n        this.lasso.enable();\r\n    }\r\n\r\n    disable() {\r\n        if (!this.lasso) {\r\n            return;\r\n        }\r\n        this.lasso.disable();\r\n    }\r\n\r\n    toggle() {\r\n        if (!this.lasso) {\r\n            return;\r\n        }\r\n        this.lasso.toggle();\r\n    }\r\n}\r\n","import 'leaflet';\r\nimport { LassoHandler } from './lasso-handler';\r\nimport { LassoControl } from './lasso-control';\r\n\r\ndeclare module 'leaflet' {\r\n    type Lasso = LassoHandler;\r\n    let Lasso: typeof LassoHandler;\r\n\r\n    let lasso: (...args: ConstructorParameters<typeof LassoHandler>) => LassoHandler;\r\n    \r\n    namespace Control {\r\n        type Lasso = LassoControl;\r\n        let Lasso: typeof LassoControl;\r\n    }\r\n\r\n    namespace control {\r\n        let lasso: (...args: ConstructorParameters<typeof LassoControl>) => LassoControl;\r\n    }\r\n}\r\n\r\nif (typeof window.L !== 'undefined') {\r\n    window.L.Lasso = LassoHandler;\r\n    window.L.lasso = (...args: ConstructorParameters<typeof LassoHandler>) => new LassoHandler(...args);\r\n\r\n    window.L.Control.Lasso = LassoControl;\r\n    window.L.control.lasso = (...args: ConstructorParameters<typeof LassoControl>) => new LassoControl(...args);\r\n}\r\n\r\nexport * from './lasso-handler';\r\nexport * from './lasso-control';"],"names":["L.polyline","L.polygon","L.Layer","L.latLngBounds","point","L.point","L.GeoJSON","L.Circle","L.CircleMarker","L.Marker","L.Polyline","L.Util","L.Path","L.MarkerCluster","L.Handler","L.DomUtil","L.DomEvent","L.Control"],"mappings":"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"}